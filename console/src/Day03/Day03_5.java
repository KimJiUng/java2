package Day03;

public class Day03_5 { // c s

	public static void main(String[] args) { // m s
		
		//  반복문 : 1. for  2. while  3. do~while [x]
		// for :
			// 어디서부터 어디까지 몇개씩 증가/감소 하면서 반복처리
			// 1. 초기값	2. 조건식	3.증감식
				// 1부터 10까지 1씩 증가하면서 반복처리 => 10번 실행
				// 1부터 10까지 3씩 증가하면서 반복처리 => 4번 실행
			// 형태
			// for( 1.초기값 ; 2.조건식 ; 3.증감식){
			// 		반복실행문;
			// }
		// for 중첩 :
			// for(){for2(){for3(){}}}
		
		for(int i=1; i<=10; i++) {
			// int i = 1 : 초기값 선언[i는 반복변수]
			// i<=10 : 조건식[i가 10 이하이면 실행 아니면 실행x]
			// i++ : 증감식[실행문 실행후 증가 혹은 감소 단위]
			
		// * 변수 i 는 1부터 10까지 1씩 증가하면서 실행문을 반복처리
			System.out.print(i+" ");
				// i = 1 일때 i<=10 [ true] 실행문 실행 => 증감식 i=2
				// i = 2 일때 i<=10 [ true] 실행문 실행 => 증감식 i=3
				// ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
				// i = 10 일때 i<=10 [true] 실행문 실행 => 증감식 i=11
				// i = 11 일때 i<=10 [false] 반복문 종료
		}
		
		int sum = 0; // 누적합을 저장할 변수
		for(int i = 1 ; i<=100 ; i++) {
			// i는 1부터 100까지 1씩 증가하면서 실행문 반복처리
			sum += i; // sum = sum+i;
		} // 반복문 종료
		
		System.out.println("\n1~100까지 누적합 결과 : " + sum);
		
		
		// 예제3 : 1부터 100까지 7배수의 누적합계
		int sum2 = 0;
		for(int i = 0 ; i<=100; i+=7) {
			sum2 +=i;
		}
		
		System.out.println("1~100까지 7배수 누적합 결과 : "+sum2);
		
		// 예제3 : 1부터 100까지 7배수의 누적합계
		int sum3 = 0;
		for(int i = 1; i<=100; i++) {
			// 배수찾기 : 값%수 == 0 이면 값 그 수의 배수
			if(i%7==0) sum3 +=i;
			// 만약에 i가 7의 배수이면 누적합, 아니면 x
		}
		System.out.println("1~100까지 7배수 누적합 결과 : "+sum3);
		
		
		// 예제4 : 2단 구구단 만들기 [ 2=상수, 곱=변수]
		for(int i=1 ; i<=9 ; i++) {
			//System.out.println("2X"+i+"="+(2*i));
			System.out.printf("2X%d=%d \n", i, (2*i));
		}
		
		// 예제5 : 2단~9단 구구단 만들기 [단 = 변수 , 곱 = 변수]
			// 단 2부터 9까지 1씩 증가
			// 곱 1부터 9까지 1씩 증가
				// 단 1번 실행될때마다 곱 9번 실행
			// 구구단 총 실행 횟수 => 72번 실행
		for(int 단 = 2; 단<=9; 단++) {
			System.out.printf("-----------%d단----------\n", 단);
			for(int 곱=1; 곱<=9; 곱++) {
				System.out.printf("%d X %d = %d \n", 단, 곱, (단*곱));
			}
		}
		
		
		
		
	} // m e
	
} // c e

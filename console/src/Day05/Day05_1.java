package Day05;

public class Day05_1 { // c s

	public static void main(String[] args) { // m s
		
		// 변수 : 하나의 데이터 저장
		// 배열 : 동일한 자료형의 데이터를 특정기준[인덱스]으로 나열시켜 저장
		// 1차원 배열 : 길이
			// 형태 : 자료형[] 배열명 = new 자료형[길이];
			// ex) int[] arr = new int[3];
			//		int int int
			// * int형 변수 3개 저장할 수 있는 배열
		
		// 2차원 배열 : 가로길이 세로길이
			// 형태 : 자료형[][] 배열명 = new 자료형[가로=행][세로=열];
			// ex) int[][] arr2 = new int[4][3];
			//		int int int
			//		int int int
			// 		int int int
			//		int int int
			// * int형 변수 12개 저장할 수 있는 배열
		
		// 3차원 배열 : 가로길이 세로길이 높이길이
			// 형태 : 자료형[][][] 배열명 = new 배열명[가로][세로][높이];
			
		// 예제1) 
		int[] 배열 = new int[3]; // int : 4바이트 * 3 => 12바이트 배열
			배열[0] = 80; // 0번 인덱스에 80 데이터 대입
			배열[1] = 90;
			배열[2] = 100;
		
		int[][] 배열2 = new int[2][3]; // [가로=행][세로=열] // 4바이트 * 2 * 3 => 24바이트
			배열2[0][0] = 80;		배열2[0][1] = 90; 	배열2[0][2] = 100;
			배열2[1][0] = 40;		배열2[1][1] = 50;		배열2[1][2] = 60;
			
		System.out.println("1차원 배열 : "+배열);	// 인덱스 없이 배열명만 호출시 주소값[메모리] 출력
		System.out.println("2차원 배열 : "+배열2);
	
		System.out.println("1차원 배열길이 : "+배열.length); // 배열의 길이
		System.out.println("2차원 배열 행 길이 : "+배열2.length); // 2차원배열의 행 길이
		System.out.println("2차원 배열 열 길이 : "+배열2[0].length);
		
		// 예2) 반복문을 이용한 0~49까지 첫번째 행에 저장
						// 50~99까지 두번째 행에 저장하는 2차원 배열 선언
		
		int[][] 배열3 = new int[2][50]; // int 4바이트 *2 *50 => 400바이트 배열 선언
		
		// 저장 반복문
		for(int i = 0; i<100; i++) {
			// 첫번째 행 값 넣기
			if(i<50) { // i가 50미만이면 첫번째 행번호
				배열3[0][i] = i;
				// [0] : 첫번째 행번호
				// [i] : i번째 열번호	
			}
			else { // i가 50 이상이면 두번째 행번호
				배열3[1][i-50] = i;
				// [1] : 두번째 행번호
				// [i] : i번째 열번호
			}
			
		}
		// 출력 반복문
		for(int i =0; i<100; i++) {
			if(i<50) {
			System.out.printf("%3d",배열3[0][i]); // 첫번째 행 출력 
			// %d : 정수 // %f : 실수 // %2d : 자리수 2칸 차지 // %.2f : 소수점 2자리 까지 표현
			}
			else System.out.printf("%3d",배열3[1][i-50]); // 두번째 행 출력
			if(i==49)System.out.println(); // 행 구분
			
		}
		
		
	} // m e
	
} // c e
